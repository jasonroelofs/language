# import("test")

Test.describe("TaskRunner", as: { |test|
  test("defining tasks", is: { |assert|
    runner = TaskRunner.new()
    runner.define("task", is: { |args| 1 })

    assert(runner.taskNames() == ["task"])
  })

  test("executes task that matches argv", is: { |assert|
    runner = TaskRunner.new()
    runner.define("task", is: { |args| 1 })

    result = runner.run(["task"])

    assert(result == 1)
  })

  test("it passes in arguments to the task if provided", is: { |assert|
    runner = TaskRunner.new()
    # TODO: I want blocks to take normal parameters
    # Need splatting for this to work though
    runner.define("addNumbers", is: { |args| args[0] + args[1] })

    result = runner.run(["addNumbers", "1", "2"])

    assert(result == "12")
  })

  test("outputs the list of defined tasks when --help given")

  test("runs the 'default' task if no arguments provided", is: { |assert|
    runner = TaskRunner.new()
    runner.define("task", is: { |args| 1 })
    runner.define("default", is: { |args| "default" })

    result = runner.run()
    assert(result == "default")
  })

  test("outputs an error message if no such task found", is: { |assert|
    runner = TaskRunner.new()

    result = runner.run(["unknown"])

    assert(result == "Don't know how to run task 'unknown'")
  })
})
