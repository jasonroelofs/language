# import("test")

Test.describe("Array", as: { |test|
  test("[]", is: { |assert|
    a = [1, 2, 3]

    assert(a.length() == 3)
    assert(a[0] == 1)
    assert(a[1] == 2)
    assert(a[2] == 3)
  })

  test("[]=", is: { |assert|
    a = []
    a[0] = 1
    a[1] = 2

    assert(a.length() == 2)
    assert(a[0] == 1)
    assert(a[1] == 2)
  })

  test("length", is: { |assert|
    a = [1,2,3]
    assert(a.length() == 3)
  })

  test("isEmpty", is: { |assert|
    a = []
    b = [1]

    assert(a.isEmpty())
    assert(!b.isEmpty())
  })

  test("push", is: { |assert|
    a = []
    a.push(1)
    a.push(2)

    assert(a.length() == 2)
    assert(a[0] == 1)
    assert(a[1] == 2)
  })

  test("pop", is: { |assert|
    a = [1, 2, 3]

    assert(a.pop() == 3)
    assert(a.pop() == 2)
    assert(a.pop() == 1)
    assert(a.pop() == null)
  })

  test("toString", is: { |assert|
    assert([1, 2, 3].toString() == "[1, 2, 3]")
  })

  test("each", is: { |assert|
    a = [1, 2, 3]
    b = []

    a.each({ |entry|
      b.push(entry * 2)
    })

    assert(b == [2, 4, 6])
  })

  test("==", is: { |assert|
    assert([] == [])

    a = [1, 2, 3]
    b = [3, 4, 5]
    assert(a == a)
    assert(b == b)
    assert(a != b)

    assert(a != 1)
    assert(b != "2")

    assert([1] == [1])
    assert([1] != [2])

    assert([1, 2] != [1])

    assert([1, "str"] == [1, "str"])

    assert(["str"] == ["str"])
    assert(["str"] != [1])

    assert([null] == [null])
  })
})
