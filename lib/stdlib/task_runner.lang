TaskRunner = Object.new(
  # Tasks are unique by name, so we store them as slots in
  # an anonymous object. name => Task
  tasks: Object.new(),

  define: { |name, is|
    tasks.addSlot(name: name, as: Task.new(name: name, is: is))
  },

  taskNames: {
    tasks.slotNames(includeParents: false)
  },

  run: { |argv: []|
    argv.isEmpty().do(ifTrue: { argv.push("default") })

    taskName = argv[0]
    rest = argv.slice(1)

    tasks.hasSlot(taskName).do(
      # TODO: Need splatting!
      ifTrue: { runTask(taskName, args: rest)},
      ifFalse: { unknownTask(taskName) }
    )
  },

  runTask: { |taskName, args: []|
    task = tasks.send(taskName)

    # TODO: Test against method arity so we can provide a more
    # task-oriented error message and documentation when args and
    # parameters don't match up.
    task.is(args)
  },

  unknownTask: { |taskName|
    # TODO: Raise exception?
    "Don't know how to run task '" + taskName + "'"
  },
)

Task = Object.new(
  name: "",
  description: "",
  is: {},
)
